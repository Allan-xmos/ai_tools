CC := gcc
CC_PREFIX :=
CCFLAGS := -DNDEBUG -g -DTF_LITE_STATIC_MEMORY -O3 

CXX := g++
CXXFLAGS := -DNDEBUG -g -DTF_LITE_STATIC_MEMORY -O3
CXXFLAGS += -std=c++11 

LDFLAGS  := -L/usr/local/lib -lstdc++ -lm

TARGET = test_model
OBJ_DIR := .build/x86
BIN_DIR := bin

INCLUDES := \
   -Ithird_party/flatbuffers/include \
   -Ithird_party/gemmlowp \
   -Ithird_party/lib_nn_operator/api \
   -Itensorflow_lite \
   -Isrc

SOURCES := \
   $(wildcard tensorflow_lite/tensorflow/lite/experimental/micro/*.cc) \
   $(wildcard tensorflow_lite/tensorflow/lite/experimental/micro/memory_planner/*.cc) \
   $(wildcard tensorflow_lite/tensorflow/lite/experimental/micro/kernels/xcore/*.cc) \
   tensorflow_lite/tensorflow/lite/c/c_api_internal.c \
   tensorflow_lite/tensorflow/lite/core/api/error_reporter.cc \
   tensorflow_lite/tensorflow/lite/core/api/flatbuffer_conversions.cc \
   tensorflow_lite/tensorflow/lite/core/api/op_resolver.cc \
   tensorflow_lite/tensorflow/lite/core/api/tensor_utils.cc \
   tensorflow_lite/tensorflow/lite/kernels/internal/quantization_util.cc \
   tensorflow_lite/tensorflow/lite/kernels/kernel_util.cc \
   $(wildcard third_party/lib_nn_operator/src/*.c) \
   $(wildcard src/*.cc)

OBJECTS := $(SOURCES:%.cc=$(OBJ_DIR)/%.o)
OBJECTS += $(SOURCES:%.c=$(OBJ_DIR)/%.o)

OBJECT_FILES := $(addprefix $(OBJ_DIR)/, \
   $(patsubst %.cc,%.o,$(patsubst %.c,%.o,$(SOURCES))))

.PHONY: all build clean $(TARGET)

all: build $(BIN_DIR)/$(TARGET)

build:
	@mkdir -p $(OBJ_DIR)
	@mkdir -p $(BIN_DIR)

$(OBJ_DIR)/%.o: %.c
	@mkdir -p $(@D)
	$(CC) $(CCFLAGS) $(INCLUDES) -o $@ -c $<

$(OBJ_DIR)/%.o: %.cc
	@mkdir -p $(@D)
	$(CXX) $(CXXFLAGS) $(INCLUDES) -o $@ -c $<

$(BIN_DIR)/$(TARGET): $(OBJECTS)
	@mkdir -p $(@D)
	$(CXX) $(LDFLAGS) -o $(BIN_DIR)/$(TARGET) $(OBJECT_FILES)

clean:
	-@rm -rvf $(OBJ_DIR)/*
	-@rm -rvf $(BIN_DIR)/$(TARGET)

$(TARGET): all

