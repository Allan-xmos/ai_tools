# Copyright (c) 2019, XMOS Ltd, All rights reserved
import os

import xwaf.utils.configs as xutils

CMD_LINE_BUFFER_BYTES = 256

XN_FILE_MAP = {
    '750MHz': '../config/XU316-1024-QF60-C20-750MHz.xn',
    '800MHz': '../config/XU316-1024-QF60-C20-800MHz.xn'
}

CONFIGS = {
    '750MHz': ['-DTEST_DEBUG_ON=0'],
    '800MHz': ['-DTEST_DEBUG_ON=0']
}

SHARED_FLAGS = [
    '-Os',
    '-g',
    '-Wall',
    '-report',
    '-Wcpp,-std=c++11',
    '-DTF_LITE_STATIC_MEMORY',
    '-DTF_LITE_DISABLE_X86_NEON',
    # '-mcmodel=large',
    # '-DXCORE',
    '-Wno-unknown-attributes',
    '-Wno-xcore-fptrgroup',
    '-fcmdline-buffer-bytes={}'.format(CMD_LINE_BUFFER_BYTES)
]

def options(ctx):
    ctx.add_option('--config', action='store', default='800MHz')
    ctx.add_option('--target', action='store', default=None)

def list_configs(ctx):
    for config in CONFIGS.keys():
        print(config)

def configure(conf):
    xutils.configure_configs(conf, CONFIGS, SHARED_FLAGS)

def build(bld):
    if not xutils.check_build_config(bld, CONFIGS):
        return

    bld.env.PROJECT_ROOT = '.'
    bld.env.TARGET_ARCH = XN_FILE_MAP[bld.variant]
    bld.env.XCC_XC_FLAGS = bld.env.XCC_FLAGS

    params = {}

    params['source'] = []
    params['source'].extend(bld.path.ant_glob('third_party/**/*.c'))
    params['source'].extend(bld.path.ant_glob('third_party/**/*.cc'))
    params['source'].extend(bld.path.ant_glob('third_party/**/*.xc'))
    params['source'].extend(bld.path.ant_glob('third_party/**/*.S'))
    
    params['source'].extend(bld.path.ant_glob('tensorflow_lite/**/*.c'))
    params['source'].extend(bld.path.ant_glob('tensorflow_lite/**/*.cc'))

    params['source'].extend(bld.path.ant_glob('src/**/*.cc' ))
    params['source'].extend(bld.path.ant_glob('src/**/*.xc'))
    params['source'].extend(bld.path.ant_glob('src/**/*.S' ))

    params['includes'] = [
        'third_party/gemmlowp',
        'third_party/flatbuffers/include',
        'third_party/lib_nn_operator/api',
        'tensorflow_lite',
        'src/'
    ]

    ht = bld.options.target is not None
    if ht: params['target'] = 'bin/' + bld.options.target

    bld.program(**params)

xutils.register_configs(CONFIGS)

