name: xmos-ai-tools-test-actions

on:
#   release:
#     types: [published]
#     tags:
#       - v*
  workflow_dispatch:
    inputs:
      version:
        description: "Provide a valid release tag version in the format vX.Y.Z"
        required: true

jobs:
  manylinux-release-wheel:
    name: Build release wheels for manylinux2010
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        python-version: [3.8]
      fail-fast: false
    steps:
      - name: 'Get previous release tag'
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        with:
          fallback: v0.1.0 # Optional fallback tag to use when no tag can be found
        env:
          TAG: ${{ steps.previoustag.outputs.tag }}
      - name: set env
        run: echo "TAG_VERSION=$TAG.dev$(date +'%Y%m%d')" >> $GITHUB_ENV
  
      # Caches and restores the bazelisk download directory, the bazel build directory.
      - name: Cache bazel
        uses: actions/cache@v2.1.4
        env:
          cache-name: bazel-cache
        with:
          path: |
            ~/.cache/bazelisk
            ~/.cache/bazel
          key: ${{ runner.os }}-${{ env.cache-name }}
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Build manylinux2010 wheels
        # The XMOS_AI_TOOLS_RELEASE_VERSION var is passed via docker to the
        # python setup.py script to add the version info for the wheel file.
        #
        # auditwheel requires patchelf and repairs the created wheel file to 
        # be compatible for manylinux.
        run: |
          set -x
          echo ${{ env.TAG_VERSION }}
          
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ runner.os }}-wheels
          # auditwheel creates the output wheel in the wheelhouse folder
          path: experimental/xformer/python/wheelhouse



  publish-wheels:
    name: Publish wheels to TestPyPi
    if: ${{ always() }}
    needs: [manylinux-release-wheel]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: macOS-wheels
          path: macOS-wheels
        if: ${{ needs.macos-release-wheel.result == 'success' }}
      - uses: actions/download-artifact@v2
        with:
          name: macOS-arm-wheels
          path: macOS-arm-wheels
        if: ${{ needs.macos-arm-release-wheel.result == 'success' }}
      - uses: actions/download-artifact@v2
        with:
          name: Linux-wheels
          path: Linux-wheels
        if: ${{ needs.manylinux-release-wheel.result == 'success' }}
      - run: |
          set -x
          mkdir -p dist
          cp macOS-wheels/*.whl dist/ || true
          cp macOS-arm-wheels/*.whl dist/ || true
          cp Linux-wheels/*.whl dist/ || true
          ls -la dist/
          sha256sum dist/*.whl
      - name: Publish packages to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
