name: xmos-ai-tools-release

on:
  release:
    types: [published]
    tags:
      - v*
  workflow_dispatch:
    inputs:
      version:
        description: "Provide release tag version in the format vX.Y.Z"
        required: true

# Either we triggered a workflow providing a version or published a new release
# Save the tag version in an environment variable
env:
  TAG_VERSION: ${{ github.event.inputs.version == 0 && github.ref_name || github.event.inputs.version }}

jobs:
  macos-release-wheel:
    name: Build release wheels for macOS
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: [3.8]
      fail-fast: false
    steps:
      # Caches and restores the bazelisk download directory, the bazel build directory.
      - name: Cache bazel
        uses: actions/cache@v2.1.4
        env:
          cache-name: bazel-cache
        with:
          path: |
            ~/.cache/bazelisk
            ~/.cache/bazel
          key: ${{ runner.os }}-${{ env.cache-name }}
      - uses: actions/checkout@v2
        with:
          submodules: recursive
          ref: ${{ env.TAG_VERSION }}
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Build macOS wheels
        env:
          XMOS_AI_TOOLS_RELEASE_VERSION: ${{ env.TAG_VERSION }}
        shell: bash
        run: |
          python --version
          python -m pip install delocate wheel setuptools numpy six auditwheel --no-cache-dir
                    
          cd experimental/xformer
          bazelisk build //:xcore-opt --copt=-fvisibility=hidden --copt=-mavx --copt=-mmacosx-version-min=10.13 --linkopt=-mmacosx-version-min=10.13 --linkopt=-dead_strip --distinct_host_configuration=false
          
          cd python
          python setup.py bdist_wheel
          #for f in dist/*.whl; do
          #  auditwheel repair $f -w wheelhouse
          #done
          
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ runner.os }}-wheels
          path: experimental/xformer/python/dist


  publish-wheels:
    name: Publish wheels to TestPyPi
    if: ${{ always() }}
    needs: [macos-release-wheel]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: macOS-wheels
          path: macOS-wheels
        if: ${{ needs.macos-release-wheel.result == 'success' }}
      - run: |
          set -x
          mkdir -p dist
          cp macOS-wheels/*.whl dist/ || true
          ls -la dist/
          sha256sum dist/*.whl
      - name: Publish package to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
