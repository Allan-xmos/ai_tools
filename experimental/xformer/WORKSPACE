workspace(name = "xformer")

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
load("@bazel_tools//tools/build_defs/repo:utils.bzl", "maybe")

################################ Platforms ####################################
# Adding this to address JDK not found on M1 macs for bazel error
# https://github.com/GerritCodeReview/gerrit/commit/06b7b99768bfb6f611f70be741c8cb4f82afdf44
http_archive(
    name = "platforms",
    sha256 = "379113459b0feaf6bfbb584a91874c065078aa673222846ac765f86661c27407",
    urls = [
        "https://mirror.bazel.build/github.com/bazelbuild/platforms/releases/download/0.0.5/platforms-0.0.5.tar.gz",
        "https://github.com/bazelbuild/platforms/releases/download/0.0.5/platforms-0.0.5.tar.gz",
    ],
)

################################## Skylib #####################################
SKYLIB_VERSION = "1.0.3"

http_archive(
    name = "bazel_skylib",
    sha256 = "1c531376ac7e5a180e0237938a2536de0c54d93f5c278634818e0efc952dd56c",
    urls = [
        "https://mirror.bazel.build/github.com/bazelbuild/bazel-skylib/releases/download/{version}/bazel-skylib-{version}.tar.gz".format(version = SKYLIB_VERSION),
        "https://github.com/bazelbuild/bazel-skylib/releases/download/{version}/bazel-skylib-{version}.tar.gz".format(version = SKYLIB_VERSION),
    ],
)
load("@bazel_skylib//lib:paths.bzl", "paths")

################################## TensorFlow ##################################
http_archive(
    name = "org_tensorflow",
    patch_args = ["-p0"],
    patch_tool = "patch",
    patches = [
          "//patches:flatbuffer_export.patch",
    ],
    sha256 = "66b953ae7fba61fd78969a2e24e350b26ec116cf2e6a7eb93d02c63939c6f9f7",
    strip_prefix = "tensorflow-2.8.0",
    urls = [
        "https://github.com/tensorflow/tensorflow/archive/v2.8.0.tar.gz",
    ],
)

# Import all of the tensorflow dependencies. Note that we are deliberately
# letting TensorFlow take control of all the dependencies it sets up, whereas
# ours are initialized with `maybe`. Actually tracking this with Bazel is PITA
# and for now this gets TF stuff building. This includes, for instance,
# @llvm-project and @com_google_absl.
load("@org_tensorflow//tensorflow:workspace3.bzl", "tf_workspace3")
tf_workspace3()
load("@org_tensorflow//tensorflow:workspace2.bzl", "tf_workspace2")
tf_workspace2()
load("@org_tensorflow//tensorflow:workspace1.bzl", "tf_workspace1")
tf_workspace1()
load("@org_tensorflow//tensorflow:workspace0.bzl", "tf_workspace0")
tf_workspace0()

################################# lib_nn #######################################
new_local_repository(
    name = "lib_nn",
    path = "../../third_party/lib_nn",
    build_file = "lib_nn.BUILD",
)

############################# lib_tflite_micro #################################
new_local_repository(
    name = "lib_tflite_micro",
    path = "../../third_party/lib_tflite_micro",
    build_file = "lib_tflite_micro.BUILD",
)

########################### larq compute engine ################################
http_archive(
    name = "lce",
    sha256 = "61f956bebce552406d338c3311995473f47c13105caa0cfea1a85bb047c27286",
    strip_prefix = "compute-engine-0.7.0",
    urls = [
        "https://github.com/larq/compute-engine/archive/refs/tags/v0.7.0.tar.gz",
    ],
)

